package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;

@TeleOp(name="Hello!", group="Drive")
public class Merica extends LinearOpMode {
    @Override
    public void runOpMode() throws InterruptedException {

        DcMotor motorFL= hardwareMap.dcMotor.get("fL");
        DcMotor motorBL= hardwareMap.dcMotor.get("bL");
        DcMotor motorFR= hardwareMap.dcMotor.get("fR");
        DcMotor motorBR= hardwareMap.dcMotor.get("bR");

        motorFR.setDirection(DcMotorSimple.Direction.REVERSE);
        motorBR.setDirection(DcMotorSimple.Direction.REVERSE);

        waitForStart();

        if (isStopRequested()) return;

        while (opModeIsActive()) {
            double y = -gamepad1.left_stick_y; // Remember, this is reversed!
            double x = gamepad1.left_stick_x * 1.1; // Counteract imperfect strafing
            double rx = gamepad1.right_stick_x;

            double denominator = Math.max(Math.abs(y) + Math.abs(x) + Math.abs(rx), 1);
            double frontLeftPower = (y + x + rx) / denominator;
            double backLeftPower = (y - x + rx) / denominator;
            double frontRightPower = (y - x - rx) / denominator;
            double backRightPower = (y + x - rx) / denominator;

            motorFL.setPower(frontLeftPower);
            motorBL.setPower(backLeftPower);
            motorFR.setPower(frontRightPower);
            motorBR.setPower(backRightPower);
            telemetry.addData("FL", frontLeftPower);
            telemetry.addData("Bl", backLeftPower);
            telemetry.addData("FR", frontRightPower);
            telemetry.addData("BR", backRightPower);
            telemetry.update();
            
        }
    }
}
